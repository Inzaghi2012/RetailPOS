//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace RetailPOS.PersistenceLayer.Repository.Entities
{
    public partial class customer_pay_history : EntityBase
    {
        #region Primitive Properties
    
        public virtual long id
        {
            get;
            set;
        }
    
        public virtual Nullable<int> customer_id
        {
            get { return _customer_id; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_customer_id != value)
                    {
                        if (customer != null && customer.id != value)
                        {
                            customer = null;
                        }
                        _customer_id = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<int> _customer_id;
    
        public virtual Nullable<long> order_id
        {
            get { return _order_id; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_order_id != value)
                    {
                        if (ordermaster != null && ordermaster.id != value)
                        {
                            ordermaster = null;
                        }
                        _order_id = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<long> _order_id;
    
        public virtual System.DateTime pay_date
        {
            get;
            set;
        }
    
        public virtual string pay_type
        {
            get;
            set;
        }
    
        public virtual decimal pay_amount
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual customer customer
        {
            get { return _customer; }
            set
            {
                if (!ReferenceEquals(_customer, value))
                {
                    var previousValue = _customer;
                    _customer = value;
                    Fixupcustomer(previousValue);
                }
            }
        }
        private customer _customer;
    
        public virtual ICollection<customer_pay_card_details> customer_pay_card_details
        {
            get
            {
                if (_customer_pay_card_details == null)
                {
                    var newCollection = new FixupCollection<customer_pay_card_details>();
                    newCollection.CollectionChanged += Fixupcustomer_pay_card_details;
                    _customer_pay_card_details = newCollection;
                }
                return _customer_pay_card_details;
            }
            set
            {
                if (!ReferenceEquals(_customer_pay_card_details, value))
                {
                    var previousValue = _customer_pay_card_details as FixupCollection<customer_pay_card_details>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= Fixupcustomer_pay_card_details;
                    }
                    _customer_pay_card_details = value;
                    var newValue = value as FixupCollection<customer_pay_card_details>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += Fixupcustomer_pay_card_details;
                    }
                }
            }
        }
        private ICollection<customer_pay_card_details> _customer_pay_card_details;
    
        public virtual ICollection<customer_pay_cheque_details> customer_pay_cheque_details
        {
            get
            {
                if (_customer_pay_cheque_details == null)
                {
                    var newCollection = new FixupCollection<customer_pay_cheque_details>();
                    newCollection.CollectionChanged += Fixupcustomer_pay_cheque_details;
                    _customer_pay_cheque_details = newCollection;
                }
                return _customer_pay_cheque_details;
            }
            set
            {
                if (!ReferenceEquals(_customer_pay_cheque_details, value))
                {
                    var previousValue = _customer_pay_cheque_details as FixupCollection<customer_pay_cheque_details>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= Fixupcustomer_pay_cheque_details;
                    }
                    _customer_pay_cheque_details = value;
                    var newValue = value as FixupCollection<customer_pay_cheque_details>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += Fixupcustomer_pay_cheque_details;
                    }
                }
            }
        }
        private ICollection<customer_pay_cheque_details> _customer_pay_cheque_details;
    
        public virtual ordermaster ordermaster
        {
            get { return _ordermaster; }
            set
            {
                if (!ReferenceEquals(_ordermaster, value))
                {
                    var previousValue = _ordermaster;
                    _ordermaster = value;
                    Fixupordermaster(previousValue);
                }
            }
        }
        private ordermaster _ordermaster;

        #endregion
        #region Association Fixup
    
        private bool _settingFK = false;
    
        private void Fixupcustomer(customer previousValue)
        {
            if (previousValue != null && previousValue.customer_pay_history.Contains(this))
            {
                previousValue.customer_pay_history.Remove(this);
            }
    
            if (customer != null)
            {
                if (!customer.customer_pay_history.Contains(this))
                {
                    customer.customer_pay_history.Add(this);
                }
                if (customer_id != customer.id)
                {
                    customer_id = customer.id;
                }
            }
            else if (!_settingFK)
            {
                customer_id = null;
            }
        }
    
        private void Fixupordermaster(ordermaster previousValue)
        {
            if (previousValue != null && previousValue.customer_pay_history.Contains(this))
            {
                previousValue.customer_pay_history.Remove(this);
            }
    
            if (ordermaster != null)
            {
                if (!ordermaster.customer_pay_history.Contains(this))
                {
                    ordermaster.customer_pay_history.Add(this);
                }
                if (order_id != ordermaster.id)
                {
                    order_id = ordermaster.id;
                }
            }
            else if (!_settingFK)
            {
                order_id = null;
            }
        }
    
        private void Fixupcustomer_pay_card_details(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (customer_pay_card_details item in e.NewItems)
                {
                    item.customer_pay_history = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (customer_pay_card_details item in e.OldItems)
                {
                    if (ReferenceEquals(item.customer_pay_history, this))
                    {
                        item.customer_pay_history = null;
                    }
                }
            }
        }
    
        private void Fixupcustomer_pay_cheque_details(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (customer_pay_cheque_details item in e.NewItems)
                {
                    item.customer_pay_history = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (customer_pay_cheque_details item in e.OldItems)
                {
                    if (ReferenceEquals(item.customer_pay_history, this))
                    {
                        item.customer_pay_history = null;
                    }
                }
            }
        }

        #endregion
    }
}
